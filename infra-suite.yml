# docker-compose --file docker-compose.yml up --build --no-cache -d
# docker-compose --file docker-compose.yml down

networks:
  todo-forge-network:
    driver: bridge

services:
  database:
    image: mysql:latest
    container_name: database
    networks:
      - todo-forge-network
    restart: on-failure
    ports:
      - 3306:3306
    volumes:
      - ./container_vol/database:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=dev
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    networks:
      - todo-forge-network
    restart: on-failure
    ports:
      - 9411:9411
  ## ELK -- start
  elasticsearch:
    image: elasticsearch:7.17.23
    container_name: elasticsearch
    networks:
      - todo-forge-network
    restart: on-failure
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - node.name=elasticsearch
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    configs:
      - source: elastic_config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    volumes:
      - ./container_vol/elasticsearch:/usr/share/elasticsearch/data
  logstash:
    image: logstash:7.17.23
    container_name: logstash
    networks:
      - todo-forge-network
    restart: on-failure
    ports:
      - 5044:5044
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    configs:
      - source: logstash_config
        target: /usr/share/logstash/pipeline/logstash.conf
    volumes:
      - ./container_vol/logstash/pipeline:/usr/share/logstash/pipeline
  kibana:
    image: kibana:7.17.23
    container_name: kibana
    networks:
      - todo-forge-network
    restart: on-failure
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    configs:
      - source: kibana_config
        target: /usr/share/kibana/config/kibana.yml
  ## ELK -- end
  ## Monitoring -- start
  prometheus:
    image: prom/prometheus:v2.53.2
    container_name: prometheus
    networks:
      - todo-forge-network
    restart: on-failure
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - 9090:9090
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana:11.1.4
    container_name: grafana
    networks:
      - todo-forge-network
    ports:
      - 3000:3000
    configs:
      - source: grafana_config
        target: /etc/grafana/provisioning/datasources/datasources.yml
    volumes:
      - ./container_vol/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
  ## Monitoring -- end
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    networks:
      - todo-forge-network
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
    ports:
      - 2181:2181
  kafka-1:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka-1
    networks:
      - todo-forge-network
    restart: on-failure
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zookeeper
  kafka-2:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka-2
    networks:
      - todo-forge-network
    restart: on-failure
    ports:
      - 9093:9093
      - 29093:29093
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:29093,EXTERNAL://localhost:9093
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29093,EXTERNAL://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zookeeper
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    networks:
      - todo-forge-network
    restart: on-failure
    ports:
      - 9080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:29092,kafka-2:29093
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka-1
      - kafka-2
  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis-stack
    networks:
      - todo-forge-network
    restart: on-failure
    ports:
      - 6379:6379
      - 8001:8001
    volumes:
      - ./container_vol/redis-stack:/data
configs:
  elastic_config:
    file: ./container-config/elasticsearch.yml
  logstash_config:
    file: ./container-config/logstash.conf
  kibana_config:
    file: ./container-config/kibana.yml
  prometheus_config:
    file: ./container-config/prometheus.yml
  grafana_config:
    file: ./container-config/grafana-datasources.yml