# docker-compose --file docker-compose.yml up --build -d
# docker-compose --file docker-compose.yml down

networks:
  todo-forge-network:
    driver: bridge

services:
  database:
    image: "mysql:latest"
    container_name: database
    networks:
      - todo-forge-network
    restart: always
    ports:
      - 3306:3306
    volumes:
      - ./container_vol/database:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=dev
  zipkin:
    image: "openzipkin/zipkin:latest"
    container_name: zipkin
    networks:
      - todo-forge-network
    restart: always
    ports:
      - 9411:9411
  ## ELK -- start
  elasticsearch:
    image: "elasticsearch:7.17.23"
    container_name: elasticsearch
    networks:
      - todo-forge-network
    restart: always
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - node.name=elasticsearch
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    configs:
      - source: elastic_config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    volumes:
      - ./container_vol/elasticsearch:/usr/share/elasticsearch/data
  logstash:
    image: "logstash:7.17.23"
    container_name: logstash
    networks:
      - todo-forge-network
    restart: always
    ports:
      - 5044:5044
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    configs:
      - source: logstash_config
        target: /usr/share/logstash/pipeline/logstash.conf
    volumes:
      - ./container_vol/logstash/pipeline:/usr/share/logstash/pipeline
  kibana:
    image: "kibana:7.17.23"
    container_name: kibana
    networks:
      - todo-forge-network
    restart: always
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    configs:
      - source: kibana_config
        target: /usr/share/kibana/config/kibana.yml
  ## ELK -- end
  ## Monitoring -- start
  prometheus:
    image: prom/prometheus:v2.53.2
    container_name: prometheus
    networks:
      - todo-forge-network
    restart: always
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - 9090:9090
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana:11.1.4
    container_name: grafana
    networks:
      - todo-forge-network
    ports:
      - 3000:3000
    configs:
      - source: grafana_config
        target: /etc/grafana/provisioning/datasources/datasources.yml
    volumes:
      - ./container_vol/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
  ## Monitoring -- end
  config-service:
    build: ./config-service
    container_name: config-service
    networks:
      - todo-forge-network
    restart: always
    ports:
      - 8080:8080
    #working_dir: /app
    #volumes:
    #  - ./config-service/target/config-service.jar:/app/config-service.jar
    #command: [ "java", "-jar", "config-service.jar" ]
  discovery-service:
    build: ./discovery-service
    container_name: discovery-service
    networks:
      - todo-forge-network
    restart: always
    ports:
      - 8081:8081
    #working_dir: /app
    #volumes:
    #  - ./discovery-service/target/discovery-service.jar:/app/discovery-service.jar
    #command: [ "java", "-jar", "discovery-service.jar" ]
    environment:
      - CONFIG_HOST=http://config-service:8080
    depends_on:
      - config-service
  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    networks:
      - todo-forge-network
    restart: always
    ports:
      - 8082:8082
    #working_dir: /app
    #volumes:
    #  - ./gateway-service/target/gateway-service.jar:/app/gateway-service.jar
    #command: [ "java", "-jar", "gateway-service.jar" ]
    environment:
      - CONFIG_HOST=http://config-service:8080
      - DISCOVERY_HOST=http://discovery-service:8081
    depends_on:
      - config-service
  auth-service:
    build: ./auth-service
    container_name: auth-service
    networks:
      - todo-forge-network
    restart: always
    ports:
      - 8083:8083
    #working_dir: /app
    #volumes:
    #  - ./auth-service/target/auth-service.jar:/app/auth-service.jar
    #command: ["java", "-jar", "auth-service.jar"]
    environment:
      - ZIPKIN_HOST=http://zipkin:9411
      - CONFIG_HOST=http://config-service:8080
      - DISCOVERY_HOST=http://discovery-service:8081
      - AUTH_HOST=http://auth-service:8083
      - TODO_HOST=http://todo-service:8084
      - ACCOUNT_HOST=http://account-service:8085
      - LOGSTASH_HOST=logstash:5044 # TCP -> not include http:// at prefix
    depends_on:
      - config-service
      - discovery-service
      - logstash
  todo-service:
    build: ./todo-service
    container_name: todo-service
    networks:
      - todo-forge-network
    restart: always
    ports:
      - 8084:8084
    #working_dir: /app
    #volumes:
    #  - ./todo-service/target/todo-service.jar:/app/todo-service.jar
    #command: ["java", "-jar", "todo-service.jar"]
    environment:
      - DB_URL=jdbc:mysql://database:3306/todo
      - DB_USERNAME=root
      - DB_PASSWORD=dev
      - ZIPKIN_HOST=http://zipkin:9411
      - CONFIG_HOST=http://config-service:8080
      - DISCOVERY_HOST=http://discovery-service:8081
      - AUTH_HOST=http://auth-service:8083
      - TODO_HOST=http://todo-service:8084
      - ACCOUNT_HOST=http://account-service:8085
      - LOGSTASH_HOST=logstash:5044
    depends_on:
      - config-service
      - discovery-service
      - database
      - logstash
  account-service:
    build: ./account-service
    container_name: account-service
    networks:
      - todo-forge-network
    restart: always
    ports:
      - 8085:8085
    #working_dir: /app
    #volumes:
    #  - ./account-service/target/account-service.jar:/app/account-service.jar
    #command: ["java", "-jar", "account-service.jar"]
    environment:
      - DB_URL=jdbc:mysql://database:3306/account
      - DB_USERNAME=root
      - DB_PASSWORD=dev
      - ZIPKIN_HOST=http://zipkin:9411
      - CONFIG_HOST=http://config-service:8080
      - DISCOVERY_HOST=http://discovery-service:8081
      - AUTH_HOST=http://auth-service:8083
      - TODO_HOST=http://todo-service:8084
      - ACCOUNT_HOST=http://account-service:8085
      - LOGSTASH_HOST=logstash:5044
    depends_on:
      - config-service
      - discovery-service
      - database
      - logstash

configs:
  elastic_config:
    file: ./container-config/elasticsearch.yml
  logstash_config:
    file: ./container-config/logstash.conf
  kibana_config:
    file: ./container-config/kibana.yml
  prometheus_config:
    file: ./container-config/prometheus.yml
  grafana_config:
    file: ./container-config/grafana-datasources.yml